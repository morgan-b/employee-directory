{"ast":null,"code":"var _jsxFileName = \"/Users/morganbailey/employee-directory/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Alert from \"../components/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      results: [],\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getEmployees(this.state.search).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n\n        this.setState({\n          results: res.data,\n          error: \"\"\n        });\n        console.log(res.data.name.title);\n      }).catch(err => this.setState({\n        error: err.message\n      }));\n    };\n  }\n\n  //   When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getEmployees().then(res => this.setState({\n      list: res.data.results\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const data = this.state.results;\n    const emp = data.name;\n    console.log(data);\n    console.log(emp);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"search=\", this.state.search, \"handleInputChange=\", this.handleInputChange, \"handleSearch=\", this.handleSearch, /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Search By Employee Name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"danger\",\n          style: {\n            opacity: this.state.error ? 1 : 0,\n            marginBottom: 10\n          },\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n          handleFormSubmit: this.handleFormSubmit // handleInputChange={this.handleInputChange}\n          // names={this.state.names}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          first: this.state.results.name.first\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/morganbailey/employee-directory/src/pages/Search.js"],"names":["React","Component","API","Container","SearchForm","SearchResults","Alert","Search","state","search","results","error","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getEmployees","then","res","data","status","Error","message","console","log","name","title","catch","err","componentDidMount","list","render","emp","handleSearch","minHeight","opacity","marginBottom","first"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAG7BO,KAH6B,GAGrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAHqB;;AAAA,SAiB7BC,iBAjB6B,GAiBTC,KAAK,IAAI;AAC3B,WAAKC,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KAnB4B;;AAAA,SAqB7BC,gBArB6B,GAqBVJ,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AAEAhB,MAAAA,GAAG,CAACiB,YAAJ,CAAiB,KAAKX,KAAL,CAAWC,MAA5B,EACGW,IADH,CACQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,OAAxB,EAAiC;AAC/B,gBAAM,IAAIC,KAAJ,CAAUH,GAAG,CAACC,IAAJ,CAASG,OAAnB,CAAN;AACD;;AACD,aAAKX,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAEW,GAAG,CAACC,IAAf;AAAqBX,UAAAA,KAAK,EAAE;AAA5B,SAAd;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACC,IAAJ,CAASM,IAAT,CAAcC,KAA1B;AACD,OAPH,EAQGC,KARH,CAQSC,GAAG,IAAI,KAAKjB,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEoB,GAAG,CAACN;AAAb,OAAd,CARhB;AASD,KAjC4B;AAAA;;AAS/B;AACAO,EAAAA,iBAAiB,GAAI;AACjB9B,IAAAA,GAAG,CAACiB,YAAJ,GACCC,IADD,CACMC,GAAG,IACP,KAAKP,QAAL,CAAc;AAACmB,MAAAA,IAAI,EAACZ,GAAG,CAACC,IAAJ,CAASZ;AAAf,KAAd,CAFF,EAGCoB,KAHD,CAGOC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAHd;AAIH;;AAmBCG,EAAAA,MAAM,GAAG;AACP,UAAMZ,IAAI,GAAG,KAAKd,KAAL,CAAWE,OAAxB;AACA,UAAMyB,GAAG,GAAGb,IAAI,CAACM,IAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,wBACE;AAAA,4BACY,KAAK3B,KAAL,CAAWC,MADvB,wBAEmB,KAAKG,iBAFxB,mBAGc,KAAKwB,YAHnB,eAIE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE,KAAK9B,KAAL,CAAWG,KAAX,GAAmB,CAAnB,GAAuB,CAAlC;AAAqC4B,YAAAA,YAAY,EAAE;AAAnD,WAFT;AAAA,oBAIG,KAAK/B,KAAL,CAAWG;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE,QAAC,UAAD;AACE,UAAA,gBAAgB,EAAE,KAAKM,gBADzB,CAEE;AACA;;AAHF;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,OAAX,CAAmBkB,IAAnB,CAAwBY;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA9D4B;;AAiE/B,eAAejC,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Alert from \"../components/Alert\";\n\nclass Search extends Component {\n\n    \n  state = {\n    search: \"\",\n    results: [],\n    error: \"\"\n  };\n\n//   When the component mounts, get a list of all available base breeds and update this.state.breeds\ncomponentDidMount () {\n    API.getEmployees()\n    .then(res => \n      this.setState({list:res.data.results}))\n    .catch(err => console.log(err));\n};\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n  \n    API.getEmployees(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data, error: \"\" });\n        console.log(res.data.name.title)\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };\n  render() {\n    const data = this.state.results\n    const emp = data.name\n    console.log(data)\n    console.log(emp)\n    return (\n      <div>\n          search={this.state.search}\n      handleInputChange={this.handleInputChange}\n      handleSearch={this.handleSearch}\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Search By Employee Name!</h1>\n          <Alert\n            type=\"danger\"\n            style={{ opacity: this.state.error ? 1 : 0, marginBottom: 10 }}\n          >\n            {this.state.error}\n          </Alert>\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            // handleInputChange={this.handleInputChange}\n            // names={this.state.names}\n          />\n          <SearchResults first={this.state.results.name.first} \n      />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}